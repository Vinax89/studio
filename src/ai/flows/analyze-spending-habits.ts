// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Analyzes user's spending habits based on uploaded financial documents.
 *
 * - analyzeSpendingHabits - A function that analyzes spending habits.
 * - AnalyzeSpendingHabitsInput - The input type for the analyzeSpendingHabits function.
 * - AnalyzeSpendingHabitsOutput - The return type for the analyzeSpendingHabits function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeSpendingHabitsInputSchema = z.object({
  financialDocuments: z
    .array(z.string())
    .describe(
      'An array of financial documents as data URIs that must include a MIME type and use Base64 encoding. Expected format: data:<mimetype>;base64,<encoded_data>.'
    ),
  userDescription: z.string().describe('A description of the user and their financial goals.'),
});
export type AnalyzeSpendingHabitsInput = z.infer<typeof AnalyzeSpendingHabitsInputSchema>;

const AnalyzeSpendingHabitsOutputSchema = z.object({
  spendingAnalysis: z.string().describe('An analysis of the user spending habits.'),
  savingsOpportunities: z.string().describe('Identified potential savings opportunities.'),
  recommendations: z.string().describe('Personalized financial recommendations.'),
});
export type AnalyzeSpendingHabitsOutput = z.infer<typeof AnalyzeSpendingHabitsOutputSchema>;

export async function analyzeSpendingHabits(input: AnalyzeSpendingHabitsInput): Promise<AnalyzeSpendingHabitsOutput> {
  return analyzeSpendingHabitsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'analyzeSpendingHabitsPrompt',
  input: {schema: AnalyzeSpendingHabitsInputSchema},
  output: {schema: AnalyzeSpendingHabitsOutputSchema},
  prompt: `You are a personal finance advisor. Analyze the user's spending habits based on the provided financial documents and user description. Identify potential savings opportunities and provide personalized financial recommendations.

User Description: {{{userDescription}}}

Financial Documents:
{{#each financialDocuments}}
  Document: {{media url=this}}
{{/each}}`,
});

const analyzeSpendingHabitsFlow = ai.defineFlow(
  {
    name: 'analyzeSpendingHabitsFlow',
    inputSchema: AnalyzeSpendingHabitsInputSchema,
    outputSchema: AnalyzeSpendingHabitsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
