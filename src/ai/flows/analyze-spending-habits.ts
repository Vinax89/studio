
// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Analyzes user's spending habits based on uploaded financial documents.
 *
 * - analyzeSpendingHabits - A function that analyzes spending habits.
 * - AnalyzeSpendingHabitsInput - The input type for the analyzeSpendingHabits function.
 * - AnalyzeSpendingHabitsOutput - The return type for the analyzeSpendingHabits function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';
import { Goal } from '@/lib/types';

const GoalSchema = z.object({
    id: z.string(),
    name: z.string(),
    targetAmount: z.number(),
    currentAmount: z.number(),
    deadline: z.string(),
    importance: z.number().describe("User's importance rating for this goal, from 1 (not important) to 5 (very important)."),
});

const AnalyzeSpendingHabitsInputSchema = z.object({
  financialDocuments: z
    .array(z.string())
    .describe(
      'An array of financial documents as data URIs that must include a MIME type and use Base64 encoding. Expected format: data:<mimetype>;base64,<encoded_data>.'
    ),
  userDescription: z.string().describe('A description of the user and their general financial situation.'),
  goals: z.array(GoalSchema).describe("An array of the user's financial goals, including their self-rated importance."),
});
export type AnalyzeSpendingHabitsInput = z.infer<typeof AnalyzeSpendingHabitsInputSchema>;

const AnalyzeSpendingHabitsOutputSchema = z.object({
  spendingAnalysis: z.string().describe('An analysis of the user spending habits.'),
  savingsOpportunities: z.string().describe('Identified potential savings opportunities.'),
  recommendations: z.string().describe('Personalized financial recommendations, taking goal importance into account.'),
});
export type AnalyzeSpendingHabitsOutput = z.infer<typeof AnalyzeSpendingHabitsOutputSchema>;

export async function analyzeSpendingHabits(input: AnalyzeSpendingHabitsInput): Promise<AnalyzeSpendingHabitsOutput> {
  return analyzeSpendingHabitsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'analyzeSpendingHabitsPrompt',
  input: {schema: AnalyzeSpendingHabitsInputSchema},
  output: {schema: AnalyzeSpendingHabitsOutputSchema},
  prompt: `You are a personal finance advisor for nursing professionals. Analyze the user's spending habits based on the provided financial documents, their personal description, and their stated financial goals.

Crucially, you must consider the 'importance' ranking of each goal. Recommendations should prioritize achieving the goals the user has marked as most important.

User Description: {{{userDescription}}}

User's Financial Goals (with importance out of 5):
{{#each goals}}
- Goal: {{name}}
  Target: \${{targetAmount}}
  Current: \${{currentAmount}}
  Deadline: {{deadline}}
  Importance: {{importance}}/5
{{/each}}

Financial Documents:
{{#each financialDocuments}}
  Document: {{media url=this}}
{{/each}}

Based on all this information, provide:
1.  **spendingAnalysis**: A summary of spending patterns found in the documents.
2.  **savingsOpportunities**: Areas where the user could potentially save money.
3.  **recommendations**: Personalized, actionable recommendations that help the user achieve their *most important* goals faster.`,
});

const analyzeSpendingHabitsFlow = ai.defineFlow(
  {
    name: 'analyzeSpendingHabitsFlow',
    inputSchema: AnalyzeSpendingHabitsInputSchema,
    outputSchema: AnalyzeSpendingHabitsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
